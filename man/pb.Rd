% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pb.R
\name{pb}
\alias{pb}
\alias{pb.default}
\alias{pb.aurrera_iter}
\title{Add a progress bar to an iterable}
\usage{
pb(object, ...)

\method{pb}{default}(object, ...)

\method{pb}{aurrera_iter}(object, ...)
}
\arguments{
\item{object}{\code{ANY}\cr
An iterable that should spawn a progress bar.}

\item{...}{\code{ANY}\cr
Additional parameters to be used in the future (e.g. progress bar
customization).}
}
\value{
The original object with \code{aurrera_iter} class prepended that handles
progress bar display in response to indexing.
}
\description{
Makes the object spawn a progress bar in response to indexing with \code{[[}
operator. Intended to be used with most iterators in R, e.g.:
\code{\link[base:lapply]{base::lapply()}} and some of its cousins, \code{\link[base:funprog]{base::Reduce()}},
\code{\link[plyr:llply]{plyr::llply()}}, \code{\link[purrr:map]{purrr::map()}}, \code{\link[foreach:foreach]{foreach::foreach()}}...
}
\examples{
result <- lapply(pb(6:20), gmp::factorize)

Reduce(`+`, pb(sample(1e5, 1e4)))

# Progress bar won't display when iterating with `for` loop
v <- character()
for (letter in pb(letters[1:5])) {
  v <- c(letter, v)
}
v

# On the other hand, manual indexing works properly
x <- pb(letters[1:5])
for (i in seq_along(x)) {
  # Just be careful with printing inside a progress bar
  print(x[[i]])
}

}
